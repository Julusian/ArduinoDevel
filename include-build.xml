<project name="Base Build File">

	<!-- define shell ant extension -->
	<property name="dir.arduinodevel" value="./" />

	<taskdef name="mytask" classname="ch.arons.ant.ExecShell" classpath="${dir.arduinodevel}lib/java/arons_ant_extension.jar" />


    <property name="dir.avrdude" value="${dir.arduino}/hardware/tools"/>
    <property name="dir.avr" value="${dir.arduino}/hardware/tools/avr/bin" />
    <property name="dir.arduino.source" value=" ${dir.arduino}/hardware/arduino/cores/arduino/" />
    <property name="dir.arduino.variants" value=" ${dir.arduino}/hardware/arduino/variants/" />
    
    
	<property name="CC" value="${dir.avr}/avr-gcc" />
	<property name="CXX" value="${dir.avr}/avr-g++" />
	<property name="OBJCOPY" value="${dir.avr}/avr-objcopy" />
	<property name="OBJDUMP" value="${dir.avr}/avr-objdump" />
	<property name="AR" value="${dir.avr}/avr-ar" />
	<property name="SIZE" value="${dir.avr}/avr-size" />
	<property name="NM" value="${dir.avr}/avr-nm" />
    <property name="AVRDUDE" value="${dir.avrdude}/avrdude" /> 

	
    <property name="CPPFLAGS" value="-Os -Wall -ffunction-sections -fdata-sections -mmcu=atmega328p -MMD -DF_CPU=16000000L -DUSB_VID=null -DUSB_PID=null -DARDUINO=105" />
    <property name="MAIN_FLAGS" value="-x c++ -Os -Wl,--gc-sections -mmcu=atmega328p -DARDUINO=105" />
    <property name="CORE_INCLUDES" value="-I${dir.arduino.source} -I${dir.arduino.variants}/standard/" />
    

    
	<!--***********************************************************************************************************-->
	<property name="dir.target" value="./target/" />

	
	<target name="lib_c">
		<mkdir dir="${dir.target}${libName}"/>
        <mytask shellcommand="${CC} -c ${CPPFLAGS} ${INCLUDES} ${sourceDir}${fileName}.c -o ${dir.target}${libName}/${fileName}.o" />
        <mytask shellcommand="${AR} rcs ${dir.target}${libName}.a ${dir.target}${libName}/${fileName}.o" />
    </target>
	<target name="lib_c++">
		<mkdir dir="${dir.target}${libName}"/>
        <mytask shellcommand="${CXX} -c ${CPPFLAGS} ${INCLUDES} ${sourceDir}${fileName}.cpp -o ${dir.target}${libName}/${fileName}.o" />
        <mytask shellcommand="${AR} rcs ${dir.target}${libName}.a ${dir.target}${libName}/${fileName}.o" />
    </target>
	
	
	<!--***********************************************************************************************************-->
	
	<target name="Core_C">
		<antcall target="lib_c">
			<param name="sourceDir" value="${dir.arduino.source}"/>
			<param name="libName" value="core"/>
			<param name="fileName" value="${fileName}"/>
		</antcall>
	</target>
	
	<target name="Core_C++">
		<antcall target="lib_c++">
            <param name="sourceDir" value="${dir.arduino.source}"/>
			<param name="libName" value="core"/>
            <param name="fileName" value="${fileName}"/>
        </antcall>
    </target>
	
	<target name="build_core">

		<delete dir="${dir.target}core"/>
		<delete file="${dir.target}core.a"/>
		<mkdir dir="${dir.target}core"/>

		<echo>Core c</echo>
		<antcall target="Core_C"><param name="fileName" value="WInterrupts"/></antcall>
		<antcall target="Core_C"><param name="fileName" value="wiring_analog"/></antcall>
		<antcall target="Core_C"><param name="fileName" value="wiring"/></antcall>
		<antcall target="Core_C"><param name="fileName" value="wiring_digital"/></antcall>
		<antcall target="Core_C"><param name="fileName" value="wiring_pulse"/></antcall>
	    <antcall target="Core_C"><param name="fileName" value="wiring_shift"/></antcall>
	    
		

		<echo>Core c++</echo>
		<antcall target="Core_C++"><param name="fileName" value="CDC"/></antcall>
		<antcall target="Core_C++"><param name="fileName" value="HardwareSerial"/></antcall>
		<antcall target="Core_C++"><param name="fileName" value="HID"/></antcall>
		<antcall target="Core_C++"><param name="fileName" value="IPAddress"/></antcall>
		<antcall target="Core_C++"><param name="fileName" value="new"/></antcall>
		<antcall target="Core_C++"><param name="fileName" value="Print"/></antcall>
		<antcall target="Core_C++"><param name="fileName" value="Stream"/></antcall>
		<antcall target="Core_C++"><param name="fileName" value="Tone"/></antcall>
		<antcall target="Core_C++"><param name="fileName" value="USBCore"/></antcall>
		<antcall target="Core_C++"><param name="fileName" value="WMath"/></antcall>
		<antcall target="Core_C++"><param name="fileName" value="WString"/></antcall>
	</target>
    <!--***********************************************************************************************************-->
		
	
	<target name="build_main">
		
        <echo>build_main</echo>
        <mytask shellcommand="${CXX} ${MAIN_FLAGS} ${INCLUDES}  -o target/main.elf  
            ./main.ino  target/core.a 
        	${libLists}
             -lm " />

        <echo>OBJCOPY</echo>
        <mytask shellcommand="${OBJCOPY} -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0 target/main.elf target/main.eep" />
        <mytask shellcommand="${OBJCOPY} -O ihex -R .eeprom target/main.elf target/main.hex " />

	</target>

	<!--***********************************************************************************************************-->
	<target name="avr-dude-upload" description="avr-dude-upload">
		<echo>OBJCOPY</echo>
		<mytask shellcommand="${AVRDUDE} -v 
	            -C ${dir.avrdude}/avrdude.conf
	            -c ${dude.programmer} 
	            -p ${dude.partno}
	            -b ${dude.baudrate}
	            -P ${dude.port}
	            -U flash:w:target/main.hex" />
	</target>

	<target name="avr-dude-dump" description="avr-dude-dump">
		<mkdir dir="target" />
		<echo>dude dump</echo>
		<mytask shellcommand="${AVRDUDE} -v 
	                    -C ${dir.avrdude}/avrdude.conf
	                    -c ${dude.programmer} 
	                    -p ${dude.partno}
	                    -b ${dude.baudrate}
	                    -P ${dude.port}
	                    -U flash:r:target/dump.hex:r" />
	</target>


</project>
